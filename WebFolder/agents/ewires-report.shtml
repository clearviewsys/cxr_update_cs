<!DOCTYPE html>
<html lang="en">

<head>

    <!--#4DSCRIPT/webRedirectIfNotAuthorized-->

    <!--#4DSCRIPT/WAPI_4DInclude/agents/include/head.shtml-->

    <!--PQ GRID LOADGRID -->

    <script type="text/javascript">
        function loadGrid2(fromDate, toDate) {
            console.log();

            var theGrid = $('div#ewires-grid-agent-ewires');

            theGrid.pqGrid('filter', {
                oper: 'replace',
                mode: 'AND',
                rules: [{
                        dataIndx: 'ewires___accountid',
                        condition: 'equal',
                        value: '@'
                    },
                    {
                        //crules currently don't work with wapi component - use between
                        dataIndx: 'ewires___senddate',
                        mode: 'AND',
                        crules: [{
                                condition: 'lte',
                                value: toDate
                            },
                            {
                                condition: 'gte',
                                value: fromDate
                            },
                        ]
                    }

                ]

            });
        }

    </script>

    <script type="text/javascript">
        function queryEwires(fromDate, toDate) {
            debugger;

            var countryCode = '<!--4DTEXT [Agents]countrycode -->';

            var $grid = $('div#ewires-grid-agent-ewires'); //jquery grid reference

            var grid = $grid.pqGrid('instance'); //javascript grid reference

            //grid.pager().destroy();

            grid.option('pageModel', {
                rPP: 10000,
            }); //this isn't working

            grid.filter({
                oper: 'replace',
                mode: 'AND',
                rules: [{
                    dataIndx: 'ewires___tocountrycode',
                    condition: 'begin',
                    value: countryCode
                }, {
                    dataIndx: 'ewires___senddate',
                    condition: 'between',
                    value: fromDate,
                    value2: toDate,
                }, ]

            });

        }

    </script>

    <script type="text/javascript">
        //   LOOK AT MAKING THIS THE FUNCTION TO DO THE LOADING --<>TODO
        function loadData3() {
            $grid.pqGrid('div#ewires-grid-agent-ewires');

            $.ajax({
                url: '/getList',
                cache: false,
                async: true,
                datatype: 'JSON',
                success: function(response) {
                    var grid = $grid.pqGrid('instance');
                    grid.option('dataModel.data', response.data);

                    grid.refreshDataAndView();
                    grid.hideLoading();
                    grid.flex();
                }
            });

        }

    </script>

    <script type="text/javascript">
        //$(function() {
        function loadGrid() {

            console.log();

            //var theFilter = element.id.replace("grid-data-", "");
            var theDiv = 'ewires-grid-agent-ewires' //this is used as part of div id name;
            //var wapi_filter = theDiv;


            if (theDiv === undefined) {
                var theDiv = ''
            }

            <!--#4DSCRIPT/WAPI_4DInclude/app/pq/include/pq_gettablename.js-->

            //--------- INITIALIZATION FUNCTION -----------
            var pqListbox = {
                rPP: 10000, //records per request.            
                init: function() {
                    this.totalRecords = 0;
                    this.data = [];
                    this.requestPage = 1;
                }
            };
            pqListbox.init();




            //--------- DEFINE GRID OBJECT -----------
            //          NOTE: grid object var = obj
            var obj = {
                numberCell: {
                    show: false
                },
                menuIcon: true,
                selectionModel: {
                    type: 'cell'
                },
                flex: {
                    one: true
                },
                showTitle: false,
                resizable: true,
                virtualX: true,
                virtualY: true,
                hwrap: false,
                wrap: false,
                height: "100%",
                showTitle: false,
                rowHt: 35,
                summaryOptions: {
                    number: 'avg,sum,max,min'
                },
                scrollModel: {
                    autoFit: true
                },
                stripeRows: false,
            };

            //----------- CREATE EVENT  -- USED FOR TOOL TIP WIDGET -------------            


            //----------- DATA READY EVENT (this sets the listbox title) --------------


            //---------- BEFORE SORT EVENT ------------     


            //---------- BEFORE SORT FILTER EVENT ------------ 
            // --- THIS WILL CLEAR THE LISTBOX SO ONLY NEW RECORDS ARE DISPLAYED ---


            //---------- BEFORE TABLE VIEW EVENT ------------           


            //---------- DOUBLE CLICK EVENT ------------


            //rowInit can be used to conditionally apply HTML attributes, css styles, css classes, etc to rows.
            obj.rowInit = function(ui) {
                    if (ui.rowData.pq_grandsummary) {
                        return {
                            cls: "btn-danger" //can also return attr (for attributes) and cls (for css classes) properties.
                        };
                    };

                    if (ui.rowData.pq_gsummary) {
                        return {
                            cls: "btn-warning" //can also return attr (for attributes) and cls (for css classes) properties.
                        };
                    };

                    if (ui.rowData.pq_gtitle) {
                        return {
                            cls: "btn-default" //can also return attr (for attributes) and cls (for css classes) properties.
                        };
                    };
                },



                //--------------CREATE TOOLBAR  ------------- 
                obj.toolbar = {
                    items: [{
                            type: 'button',
                            label: "Toggle grouping",
                            listener: function() {
                                this.Group().option({
                                    on: !this.option('groupModel.on')
                                });
                            }
                        },
                        {
                            type: 'select',
                            label: 'Format: ',
                            attr: 'id="export_format"',
                            options: [{
                                xlsx: 'Excel',
                                csv: 'Csv',
                                htm: 'Html',
                                json: 'Json'
                            }]
                        },
                        {
                            type: 'button',
                            label: "Export",
                            icon: 'ui-icon-arrowthickstop-1-s',
                            listener: function() {

                                var format = $("#export_format").val(),
                                    blob = this.exportData({
                                        //url: "/pro/demos/exportData",
                                        format: format,
                                        nopqdata: true, //applicable for JSON export.                        
                                        render: true
                                    });
                                if (typeof blob === "string") {
                                    blob = new Blob([blob]);
                                }
                                saveAs(blob, "pqGrid." + format);
                            }
                        },
                        {
                            type: 'button',
                            icon: 'ui-icon-print',
                            label: 'Print',
                            listener: function() {
                                var exportHtml = this.exportData({
                                        title: 'jQuery grid',
                                        format: 'htm',
                                        render: true
                                    }),
                                    newWin = window.open('', '', 'width=1200, height=700'),
                                    doc = newWin.document.open();
                                doc.write(exportHtml);
                                doc.close();
                                newWin.print();
                            }
                        },
                    ]
                },


                //------------ DEFINE PAGEMODEL -------------
                /*obj.pageModel = {
                type: 'remote',
                rPP: pqListbox.rPP,

                };*/

                //--------------DEFINE GROUP MODEL -------------
                obj.groupModel = {
                    on: true,
                    dataIndx: ['ewires___accountid'], //this is case sensative
                    //summaryInTitleRow: 'all', 
                    collapsed: [true],
                    showSummary: [true],
                    grandSummary: true,
                    title: [
                        "{0} ({1})",
                        "{0} - {1}"
                    ]

                };

            //--------------- DEFINE COLUMN MODEL -------------------
            obj.colModel = [


                // ADD COLUMNS TO THE GRID HERE -- USE 4D TABLENAME___FIELDNAME 
                // THE FIRST COLUMN SHOULD BE THE PK/ID FIELD FOR THE TABLE - YOU CAN SET HIDDEN:TRUE
                // https://paramquery.com/pro/api#option-colModel <-- doc's and options



                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___tocountrycode,title:Country, hidden:true} -->,
                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___accountid,title:Account, width:250} -->,

                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___counteraccountid,title:Agent-Acct, width:250} -->,
                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___senddate,title:Sent, width:150, filter:true} -->,
                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___issettled,title:Settled, width:250, summary:count} -->,
                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___beneficiaryFullName,title:Beneficiary, width:250} -->,
                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___toCountrycode,title:To, filter:true} -->,         
                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___fromCountrycode,title:From, filter:true} -->,

                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___fromamount,title:From-Amt, filter:false, summary:sum} -->,
                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___fromcurrency,title:CCY, filter:false, maxWidth:50} -->,
                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___toamount,title:To-Amt, filter:false, summary:sum} -->,
                <!--#4DSCRIPT/WAPI_colModel/{field:ewires___currency,title:CCY, filter:false, maxWidth:50} -->,
            ];

            // ------------- DEFINE DATAMODEL -----------
            obj.dataModel = {

                //data: data
                dataType: 'json',
                location: 'remote',
                url: '/getList',
                method: 'POST',

                recIndx: obj.colModel[0].dataIndx, //this gets the first column field/dataIndx
                beforeSend: pqListbox.init,
                postData: function() {
                    return {
                        pq_curpage: pqListbox.requestPage,
                        pq_rpp: pqListbox.rPP,
                        pq_table: wapi_getTableName(Object.keys(this.colIndxs)[0]), //this gets the first column field/dataIndx
                        pq_map: JSON.stringify(Object.keys(this.colIndxs)),
                        pq_session: '',
                    };
                },

            };


            //--------------DEFINE SORTMODEL -------------
            obj.filterModel = {
                on: true,
                mode: 'AND',
                type: 'remote',
                header: true,

            };

            //---------- INSERT THE GRID INTO THE DOM ---------------
            var ewiresGrid = pq.grid("div#" + theDiv, obj);
            //$("div#ewires-grid-" + theFilter).pqGrid("refreshDataAndView");

        };

    </script>

    <!-- ON READY -->
    <script type="text/javascript">
        $(function() {
            console.log();
            loadGrid();
        })

    </script>


    <!-- pq-grid-header-table -->
    <style>
        pq-grid-header-table {
        color: magenta;
        font-style: italic;
        font-weight: bold;
        
    }    
    
</style>

</head>

<body>

    <!--#4DSCRIPT/WAPI_4DInclude/agents/include/menubar.shtml-->
    <main role="main">

        <div class="page-header">
            <!-- JUMBOTRON - WELCOME -->
            <div class='container'>
                <!--#4DSCRIPT/webSelectCustomerRecord-->
                <!--#4DHTML WAPI_includeAlertMessage-->

                <h1>Agent eWire Reporting </h1>

            </div>
        </div>

        <div class="container content">

            <!--Row with two equal columns-->
            <div class="row">


                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- must set height here for grid to honor-->

                    <div class="panel panel-default">

                        <div class="panel-heading" role="tab" id="grid-tab-sent-pending">

                            <!-- INSERT QUERY OPTIONS HERE -->
                            <form class="form-inline" role="form">
                                <div class="form-group">
                                    <span class="glyphicon glyphicon-list-alt" aria-hidden="true" />
                                </div>
                                <div class="form-group">
                                    <label for="query-date-from"> From Date</label>
                                    <input type="date" class="form-control" id="query-date-from" type='date' value='<!--#4DHTMLVAR SUBSTRING(STRING(ADD TO DATE(current date;0;-1;0);9);1;10)-->'>
                                </div>

                                <div class="form-group">
                                    <label for="query-date-to">To Date</label>
                                    <input type="date" class="form-control" id="query-date-to" type='date' value='<!--#4DHTMLVAR Substring(String(current date;9);1;10)-->'>
                                </div>

                                <div class="form-group pull-right">

                                    <input type="button" class="btn btn-default" onclick="queryEwires($('#query-date-from').val(), $('#query-date-to').val())" value="Query">

                                </div>
                            </form>


                        </div>




                        <div class="panel-body clearfix">
                            <div class='form-group' style='height: 600px; padding-top: 20px;'>
                                <div id="ewires-grid-agent-ewires"></div><!-- INSERT GRID HERE -->
                            </div>
                        </div>

                        <div class="panel-footer">
                            <div id='ewires-grid-footer' class='text-muted small' style="padding-top: 20px; padding-bottom: 20px">* Please contact your representative with specific questions.</div>

                        </div>

                    </div>




                </div>
            </div>

        </div>

        <div class="modal fade" id="timerAlert" role='dialog'>
            <div class="modal-dialog">

                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
                        <h4 class="modal-title">Rates have refreshed.</h4>
                    </div>

                    <div class="modal-body">
                        <p id='timerAlertText'></p>
                    </div>
                    <div class="modal-footer">
                        <a href="#" data-dismiss="modal" class="btn btn-default">Close</a>
                    </div>

                </div>
            </div>
        </div>

    </main>

    <!--#4DSCRIPT/WAPI_4DInclude/agents/include/footer.shtml-->
</body>



</html>
