<!DOCTYPE html>
<html lang="en">
<head>

<!--#4DSCRIPT/webRedirectIfNotAuthorized-->
    
<!--#4DSCRIPT/WAPI_4DInclude/agents/include/head.shtml-->
    
<!--PQ GRID LOADGRID -->
 <script type="text/javascript">
    $(function () {

    
       console.trace();
       
       //var theFilter = element.id.replace("grid-data-", "");
       var theFilter = 'sent-pending' //element;
       var wapi_filter = theFilter;
       
       /*
       if(num === 0){
           num = 1
       } else {
           
           for(i = 0; i < 3; i++){
               
               var $temp = $("div#ewires-grid-"+i+1);
               var temp = $temp.pqGrid('instance');
               
               if(temp !== undefined){
                   $temp.pqGrid("destroy");
               }
               
           }           
       }
       */

       
       if(theFilter === undefined){
           var theFilter = ''
       }

         <!--#4DSCRIPT/WAPI_4DInclude/app/pq/include/pq_gettablename.js-->
         
//--------- INITIALIZATION FUNCTION -----------
   		 var pqListbox = {
            rpp: 100, //records per request.            
            init: function () {
            	this.totalRecords = 0;
                this.data = [];
                this.requestPage = 1;
            }
        };
        pqListbox.init();
        
        
//--------- DEFINE GRID OBJECT -----------
//          NOTE: grid object var = obj
    var obj = {
            numberCell: { show: false },
            menuIcon: true,            
            selectionModel: { type: 'cell' },
            flex: {one: true},
            showTitle: false,
            resizable: true,
            virtualX: true,
            virtualY: true,
            hwrap: false,
            wrap: false,
            height: "100%",
            showTitle: false,
            rowHt: 35,
            summaryOptions: { number: 'avg,sum,max,min'},
        scrollModel: { autoFit: true },
            stripeRows: false,
            };

//----------- CREATE EVENT  -- USED FOR TOOL TIP WIDGET -------------            

        
//----------- DATA READY EVENT (this sets the listbox title) --------------

        
//---------- BEFORE SORT EVENT ------------     

       
//---------- BEFORE SORT FILTER EVENT ------------ 
// --- THIS WILL CLEAR THE LISTBOX SO ONLY NEW RECORDS ARE DISPLAYED ---

        
 //---------- BEFORE TABLE VIEW EVENT ------------           

        
//---------- DOUBLE CLICK EVENT ------------

        
//rowInit can be used to conditionally apply HTML attributes, css styles, css classes, etc to rows.
            obj.rowInit = function (ui) {
                if (ui.rowData.pq_grandsummary) {
                    return { 
                        cls: "btn-danger" //can also return attr (for attributes) and cls (for css classes) properties.
                    };
                };
                
                if (ui.rowData.pq_gsummary) {
                    return { 
                        cls: "btn-warning" //can also return attr (for attributes) and cls (for css classes) properties.
                    };
                };
                
                if (ui.rowData.pq_gtitle) {
                    return { 
                        cls: "btn-default" //can also return attr (for attributes) and cls (for css classes) properties.
                    };
                };
                


            },
                
                
                    
//--------------CREATE TOOLBAR  ------------- 
            obj.toolbar = {
                items: [
                    {
                    type: 'button',
                    label: "Toggle grouping",
                    listener: function () {
                        this.Group().option({
                            on: !this.option('groupModel.on')
                        });
                    }
                },
                {
                    type: 'select',
                    label: 'Format: ',                
                    attr: 'id="export_format"',
                    options: [{ xlsx: 'Excel', csv: 'Csv', htm: 'Html', json: 'Json'}]
                },
                {
                    type: 'button',
                    label: "Export",
                    icon: 'ui-icon-arrowthickstop-1-s',
                    listener: function () {

                        var format = $("#export_format").val(),                            
                            blob = this.exportData({
                                //url: "/pro/demos/exportData",
                                format: format,        
                                nopqdata: true, //applicable for JSON export.                        
                                render: true
                            });
                        if(typeof blob === "string"){                            
                            blob = new Blob([blob]);
                        }
                        saveAs(blob, "pqGrid."+ format );
                    }
                },
                {
                    type: 'button',
                    icon: 'ui-icon-print',
                    label: 'Print',
                    listener: function () {
                        var exportHtml = this.exportData({ title: 'jQuery grid', format: 'htm', render: true }),
                            newWin = window.open('', '', 'width=1200, height=700'),
                            doc = newWin.document.open();
                        doc.write(exportHtml);
                        doc.close();
                        newWin.print();
                    }
                },
                ]
            },
                
                
//--------------DEFINE GROUP MODEL -------------
     obj.groupModel = {
            on: true,
            dataIndx: ['registers___accountid'], //this is case sensative
            //summaryInTitleRow: 'all', 
            collapsed: [true],
            showSummary: [true], 
            grandSummary: true,
            title: [
                "{0} ({1})",
                "{0} - {1}"
            ]

        };
        
//--------------- DEFINE COLUMN MODEL -------------------
   obj.colModel = [
        
            //{ title: "Rank", width: 200, dataType: "integer" },
            //{ title: "Company", width: 400, dataType: "string"},
            //{ title: "Revenues ($ millions)", width: 170, dataType: "float", summary:{type: 'sum'} },
            //{ title: "Profits ($ millions)", width: 170, dataType: "float", summary:{type: 'sum'} },
       
        // ADD COLUMNS TO THE GRID HERE -- USE 4D TABLENAME___FIELDNAME 
        // THE FIRST COLUMN SHOULD BE THE PK/ID FIELD FOR THE TABLE - YOU CAN SET HIDDEN:TRUE
        // https://paramquery.com/pro/api#option-colModel <-- doc's and options
        
        
        //<!--#4DSCRIPT/WAPI_getColModelColumn/{field:ewires___ewireid, filter:false, hidden:true} -->,
        //<!--#4DSCRIPT/WAPI_getColModelColumn/{field:ewires___senddate, title:Date ,filter:true, align:center, maxWidth:100} -->,   			
	    //<!--#4DSCRIPT/WAPI_getColModelColumn/{field:ewires___issettled, title:Settled, filter:true, maxWidth:50} -->,
     
       <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___accountid,title:Account, width:250} -->,
       <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___registerdate,title:Date, width:250} -->,
     <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___currency,title:CCY, width:250} -->,
        
        <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___registertype,title:Type, filter:false, maxWidth:50} -->,
     <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___debit,title:Debit, format:currency , filter:false, summary:sum} -->,
    <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___credit,title:Credit, format:currency, filter:false, summary:sum} -->,
		
		];
			
// ------------- DEFINE DATAMODEL -----------
    obj.dataModel = {
        
        //data: data
            dataType: 'json',
        	location: 'remote',
        	url: '/getList',
            method: 'POST',
        
        	recIndx: obj.colModel[0].dataIndx,//this gets the first column field/dataIndx
        	beforeSend: pqListbox.init,
        	postData: function() {
        		return {
        			pq_curpage: pqListbox.requestPage,
        			pq_rpp: pqListbox.rpp,
        			pq_table: getTableName(Object.keys(this.colIndxs)[0]),//this gets the first column field/dataIndx
        			pq_map: JSON.stringify(Object.keys(this.colIndxs)),
        			pq_session: '',
                   wapi_filter: wapi_filter,
                    //filterIndx: filterIndx,
                    //filterValue: filterValue,
        		};
        	},

       };

        
//--------------DEFINE SORTMODEL -------------

     

		

        



//---------- INSERT THE GRID INTO THE DOM ---------------
    var ewiresGrid = pq.grid("div#ewires-grid-"+theFilter, obj);

    });

</script>
  

    
    
<!-- pq-grid-header-table -->
<style>
    pq-grid-header-table {
        color: magenta;
        font-style: italic;
        font-weight: bold;
        
    }    
    
</style>
    
</head>
<body>
    
    <!--#4DSCRIPT/WAPI_4DInclude/agents/include/menubar.shtml-->
<main role="main">

<div class="page-header">
<!-- JUMBOTRON - WELCOME -->
<div class='container'>
        <!--#4DSCRIPT/webSelectCustomerRecord-->
    <!--#4DHTML WAPI_includeAlertMessage-->
    <script src="/app/js/bootstrap-auto-dismiss-alert.js"></script> <!--MUST COME AFTER THE ALERT YOU WANT TO CLOSE -->
    
    <h1>Reporting Test </h1>
    
</div>
</div>
    
    <div class="container content">
        
        <!--Row with two equal columns-->
        <div class="row">
         
            
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12"><!-- must set height here for grid to honor-->
                
            <div class="panel-group" id="accordion-grids" role="tablist" aria-multiselectable='true'>   
                
            <!-- GRID SENT-PENDING HERE -->
            <div class="panel panel-default">
                
                <div class="panel-heading" role="tab" id="grid-tab-sent-pending">
                    <h3 class="panel-title">
                        <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion-grids" href="#grid-data-sent-pending" aria-expanded="false" aria-controls="grid-data-sent-pending">
                        <span class="glyphicon glyphicon-menu-hamburger" aria-hidden="true"> </span>  Registers </a>
                    </h3>
                </div>
                    
                <div id="grid-data-sent-pending" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="grid-tab-sent-pending">                    
                    
                <div class="panel-body">
        
                <div class='form-group' style='height: 600px'>
                    <div id="ewires-grid-sent-pending"></div><!-- INSERT GRID HERE -->
                </div>
                    
                <div id='ewires-grid-footer' class='text-muted small' style="padding-top: 20px; padding-bottom: 20px">* Please contact your representative with specific questions.</div>
                
                </div>
                </div>
            </div>
   
            </div>   
                
                
            </div>
        </div>
        
    </div>
    
<div class="modal fade" id="timerAlert" role='dialog'>
	<div class="modal-dialog">
        
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
          <h4 class="modal-title">Rates have refreshed.</h4>
        </div>
          
        <div class="modal-body">
            <p id='timerAlertText'></p>
        </div>
        <div class="modal-footer">
          <a href="#" data-dismiss="modal" class="btn btn-default">Close</a>
        </div>
          
      </div>
    </div>
</div>
    
</main>

    <!--#4DSCRIPT/WAPI_4DInclude/agents/include/footer.shtml-->
</body>
   

    
</html>                            