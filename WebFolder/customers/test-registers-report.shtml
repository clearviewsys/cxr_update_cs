<!DOCTYPE html>
<html lang="en">

<head>

    <!--#4DSCRIPT/webRedirectIfNotAuthorized-->

    <!--#4DSCRIPT/WAPI_4DInclude/customers/include/head.shtml-->


    <script>
        $(function() {
                function filterhandler() {

                    console.trace();

                    var $toolbar = this.toolbar(),
                        $value = $toolbar.find(".filterValue"),
                        value = $value.val(),
                        condition = $toolbar.find(".filterCondition").val(),
                        dataIndx = $toolbar.find(".filterColumn").val(),
                        filterRules;

                    if (dataIndx == "") { //search through all fields when no field selected.
                        filterRules = this.getColModel().map(function(column) {
                            return {
                                dataIndx: column.dataIndx,
                                condition: condition,
                                value: value
                            };
                        })
                    } else { //search through selected field.
                        filterRules = [{
                            dataIndx: dataIndx,
                            condition: condition,
                            value: value
                        }];
                    }
                    this.filter({
                        oper: 'replace',
                        rules: filterRules
                    });
                }

                <!--#4DSCRIPT/WAPI_4DInclude/app/pq/include/pq_gettablename.js-->

                //--------- INITIALIZATION FUNCTION -----------
var pqListbox = {
rpp: 100, //records per request.
init: function() {
this.totalRecords = 0;
this.data = [];
this.requestPage = 1;
}
};
pqListbox.init();


                var obj = {
                    scrollModel: {autoFit: true},  
                    selectionModel: {type: 'row', mode: 'single', toggle: false},
                    numberCell: { show: false },
                    showTitle: false,
                    title: "Listing",
                    virtualX: true, 
                    virtualY: true,
                    resizable: true,
                    //columnTemplate: {render: commentRender},
                    //flexHeight: true,
                    //height: 'flex',
                    width: '100%',
                    //flex: {one: true},            
                    showBottom: true,
                    showTop: true,
                    showHeader: true,
                    wrap: false, 
                    hwrap: false,
                    editable: false,   
                    bubble: false,
                    toolPanel: {show:false},
                    collapsible: false,
                    stripRows: true,
                    roundCorners: false,
                    columnBorders: false,
                    rowBorders: true,
                    height: "100%",
                    rowHt: 35,
                    //stringify:false, //for PHP 
                };

                obj.toolbar = {
                    cls: "pq-toolbar-search",
                    style: 'background-color: #8edad0; padding-top: 10px;',
                    items: [

                        {
                            type: 'select',
                            cls: "filterColumn",
                            listeners: [{
                                'change': filterhandler
                            }],
                            options: function(ui) {
                                var opts = [{
                                    '': '[ All Fields ]'
                                }];
                                this.getColModel().forEach(function(column) {
                                    var obj = {};
                                    obj[column.dataIndx] = column.title;
                                    opts.push(obj);
                                })
                                return opts;
                            }
                        },
                        {
                            type: 'select',
                            style: "margin:0px 5px;",
                            cls: "filterCondition",
                            listeners: [{
                                'change': filterhandler
                            }],
                            options: [{
                                "begin": "Begins With"
                            },
                                      {
                                          "contain": "Contains"
                                      },
                                      {
                                          "end": "Ends With"
                                      },
                                      {
                                          "notcontain": "Does not contain"
                                      },
                                      {
                                          "equal": "Equal To"
                                      },
                                      {
                                          "notequal": "Not Equal To"
                                      },
                                      {
                                          "empty": "Empty"
                                      },
                                      {
                                          "notempty": "Not Empty"
                                      },
                                      {
                                          "less": "Less Than"
                                      },
                                      {
                                          "great": "Great Than"
                                      }
                                     ]
                        },
                        {
                            type: 'textbox',
                            label: 'Search: ',
                            attr: 'placeholder="Enter your keyword"',
                            cls: "filterValue",
                            listener: {
                                keyup: filterhandler
                            }
                        }, 

                        {
                            type : '<span id="records-found" style = "display:inline; float: right"></span>',
                        },
                    ]
                };

                obj.filterModel = {
                    mode: 'OR',
                    type: "remote"
                };

                obj.beforeTableView = function (evt, ui) {

                    var initV = ui.initV,
                        finalV = ui.finalV,
                        data = pqListbox.data,
                        rpp = pqListbox.rpp,
                        requestPage;

                    if (initV != null) {

                        //if records to be displayed in viewport are not present in local cache,
                        //then fetch them from remote database/server.

                        if (data[initV] && data[initV].pq_empty) {
                            requestPage = Math.floor(initV / rpp) + 1;
                        }
                        else if (data[finalV] && data[finalV].pq_empty) {
                            requestPage = Math.floor(finalV / rpp) + 1;
                        }

                        if (requestPage >= 1) {
                            if (pqListbox.requestPage != requestPage) {

                                pqListbox.requestPage = requestPage;

                                //initiate remote request.                    
                                this.refreshDataAndView();
                            }
                        }
                    };

                }; 

                obj.beforeFilter = function(){
                    pqListbox.init();
                };

                obj.beforeSort = function (evt) {
                    if (evt.originalEvent) {  //only if sorting done through header cell click.
                        pqListbox.init();
                    }
                }; 

                obj.colModel = [
                    <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___accountid,title:Account, width:200, filter:true} -->,
                    <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___registerdate,title:Date, width:250, filter:true} -->,
                    <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___currency,title:CCY, width:75, filter:false} -->,

                    <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___registertype,title:Type, filter:false, maxWidth:75} -->,
                    <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___debit,title:Debit, format:currency, filter:false, summary:sum} -->,
                    <!--#4DSCRIPT/WAPI_getColModelColumn/{field:registers___credit,title:Credit, format:currency, filter:false, summary:sum} -->,
                ];

                obj.dataModel = {
                    dataType: 'json',
                    location: 'remote',
                    url: '/getList',
                    method: 'POST',
                    recIndx: obj.colModel[0].dataIndx,//this gets the first column field/dataIndx
                    beforeSend: pqListbox.init,
                    postData: function() {
                        return {
                            pq_curpage: pqListbox.requestPage,
                            pq_rpp: pqListbox.rpp,
                            pq_table: getTableName(Object.keys(this.colIndxs)[0]),//this gets the first column field/dataIndx
                            pq_map: JSON.stringify(Object.keys(this.colIndxs)),
                            pq_session: '',
                            //wapi_filter: JSON.stringify(wapi_filter.concat()), //wapi_filter,
                            wapi_form: $(':input').serializeArray(), // convert to javascript function document.querySelectorAll
                        };
                    },
                    //example based on virtual scrolling
                    getData: function(response) {

                        var data = response.data,
                            totalRecords = response.totalRecords,
                            len = data.length,
                            curPage = response.curPage,
                            pq_data = pqListbox.data,
                            init = (curPage - 1) * pqListbox.rpp;

                        $('#records-found').html('Records: ' + totalRecords);

                        if (!pqListbox.totalRecords) {
                            //first time init the rows
                            for (var i = len; i < totalRecords; i++) {
                                pq_data[i + init] = { pq_empty: true };
                            }
                            pqListbox.totalRecords = totalRecords;
                        }
                        for( var i = 0; i < len; i++) {
                            pq_data[i + init] = data[i];
                            pq_data[i + init].pq_empty = false;
                        }

                        return { data: pq_data}
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        //alert(errorThrown);
                    },
                }

                var $grid = $("div#registers-grid").pqGrid(obj);

            });

        </script>


    <!--PQ GRID LOADGRID -->



    <!-- pq-grid-header-table -->
    <style>
        pq-grid-header-table {
                color: magenta;
                font-style: italic;
                font-weight: bold;

            }    

        </style>

</head>

<body>

    <!--#4DSCRIPT/WAPI_4DInclude/customers/include/menubar.shtml-->
    <main role="main">

        <div class="page-header">
            <!-- JUMBOTRON - WELCOME -->
            <div class='container'>
                <!--#4DSCRIPT/webSelectCustomerRecord-->
                <!--#4DHTML WAPI_includeAlertMessage-->
                <script src="/app/js/bootstrap-auto-dismiss-alert.js"></script>
                <!--MUST COME AFTER THE ALERT YOU WANT TO CLOSE -->

                <h1>Reporting Test </h1>

            </div>
        </div>

        <div class="container content">

            <!--Row with two equal columns-->
            <div class="row">


                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- must set height here for grid to honor-->

                    <div class="panel-group" id="accordion-grids" role="tablist" aria-multiselectable='true'>

                        <!-- GRID SENT-PENDING HERE -->
                        <div class="panel panel-default">

                            <div class="panel-heading" role="tab" id="grid-tab-sent-pending">
                                <h3 class="panel-title">
                                    <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion-grids" href="#grid-data-sent-pending" aria-expanded="false" aria-controls="grid-data-sent-pending">
                                        <span class="glyphicon glyphicon-menu-hamburger" aria-hidden="true"> </span> Registers </a>
                                </h3>
                            </div>

                            <div id="grid-data-sent-pending" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="grid-tab-sent-pending">

                                <div class="panel-body">

                                    <div class='form-group' style='height: 300px'>
                                        <div id="registers-grid"></div><!-- INSERT GRID HERE -->
                                    </div>

                                    <div id='ewires-grid-footer' class='text-muted small' style="padding-top: 20px; padding-bottom: 20px">* Please contact your representative with specific questions.</div>

                                </div>
                            </div>
                        </div>

                    </div>


                </div>
            </div>

        </div>

        <div class="modal fade" id="timerAlert" role='dialog'>
            <div class="modal-dialog">

                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
                        <h4 class="modal-title">Rates have refreshed.</h4>
                    </div>

                    <div class="modal-body">
                        <p id='timerAlertText'></p>
                    </div>
                    <div class="modal-footer">
                        <a href="#" data-dismiss="modal" class="btn btn-default">Close</a>
                    </div>

                </div>
            </div>
        </div>

    </main>

    <!--#4DSCRIPT/WAPI_4DInclude/customers/include/footer.shtml-->
</body>



</html>
