<div id="paypal-button-container" class="well"></div>

<script>
    // assumes we have the [webewires] record loaded
debugger;

    const paypalButtonsComponent = paypal.Buttons({
        style: {
            layout: 'horizontal',
            color: 'gold',
            shape: 'rect',
            label: 'paypal'
        },

        // set up the transaction
        createOrder: (data, actions) => {
            // pass in any options from the v2 orders create call:
            // https://developer.paypal.com/api/orders/v2/#orders-create-request-body
            const createOrderPayload = {
                    intent: "CAPTURE",
                    purchase_units: [{
                            reference_id: '<!--#4DTEXT [webewires]webewireid-->',
                            custom_id: '<!--#4DTEXT [webewires]customerid-->',
                            invoice_id: '',
                            description: 'Money transfer request',
                            amount: {
                                value: '<!--#4DTEXT [webewires]fromAmount-->',
                                currency_code: 'USD' //'<!--#4DTEXT [webewires]fromCCY-->'
                                },
                    
                            payer: [{
                                email_address: "<!--#4DTEXT [webewires]toParty.email-->",

                                name: {
                                    given_name: "<!--#4DTEXT [webewires]toParty.firstName-->",
                                    surname: "<!--#4DTEXT [webewires]toParty.lastName-->"
                                },
                                address: {
                                    address_line1: "<!--#4DTEXT [webewires]toParty.address-->",
                                    //address_line2: "<!--#4DTEXT [webewires]toParty.address2-->",
                                    admin_area1: "<!--#4DTEXT [webewires]toParty.city-->",
                                    admin_area2: "<!--#4DTEXT [webewires]toParty.state-->",
                                    postal_code: "<!--#4DTEXT [webewires]toParty.postalCode-->",
                                    country_code: "<!--#4DTEXT [webewires]toParty.countryCode-->"
                                },
                                phone: {
                                    phone_number: "<!--#4DTEXT [webewires]toParty.cellPhone-->",
                                }
                            }]


                            }],



        };

        return actions.order.create(createOrderPayload);
    },


    // finalize the transaction
    onApprove: (data, actions) => {
        const captureOrderHandler = (details) => {
            const payerName = details.payer.name.given_name;
            console.log('Transaction completed');

        };

        return actions.order.capture().then(captureOrderHandler);
    },

    // handle unrecoverable errors
    onError: (err) => {
        console.error('An error prevented the buyer from checking out with PayPal');
    }

    });

    paypalButtonsComponent
        .render("#paypal-button-container")
        .catch((err) => {
            console.error('PayPal Buttons failed to render');
        });


</script>